# [PackageDev] target_format: plist, ext: tmLanguage
'scopeName': 'source.regexp.stata'
'comment': 'Match Stata\'s (limited) regular expression syntax.'
'name': 'Regular Expressions (Stata)'
'patterns':
  # The following match the insides of a regular expression
  - 'match': '\\^|\\$'
    'name': 'keyword.control.anchor.regexp'
  - 'match': '[\\?\\+\\*]'
    'name': 'keyword.control.quantifier.regexp'
  - 'match': '\\|'
    'name': 'keyword.control.or.regexp'
  {
    'begin': '(\\()'
    'beginCaptures':
      '1':
        'name': 'punctuation.string.group.regexp'
    'end': '(\\))'
    'endCaptures':
      '1':
        'name': 'punctuation.string.group.regexp'
    'patterns':
      {
        'include': '$self'
      }
    ]
  }
  {
    'include': '#character-class'
  }
  {
    # 'comment' 'NOTE: Error if I have \.+ No idea why but it works fine it seems with just \.'
    # Also extremely weird but if I have the previous 'comment' line uncommented, everything inside the regexm(, "...") goes white.
    'match': '.'
    'name': 'string.quoted.stata'
  }
]
'repository':
  'character-class':
    'patterns':
      - 'match': '\\.'
        'name': 'constant.character.character-class.regexp'
      {
        'match': '\\\\.'
        'name': 'constant.character.escape.backslash.regexp'
        'comment': 'this changes the color of an escaped character'
      }
      {
        'begin': '(\\[)(\\^)?'
        'beginCaptures':
          '1':
            'name': 'punctuation.definition.character-class.regexp'
          '2':
            'name': 'keyword.operator.negation.regexp'
        'end': '(\\])'
        'endCaptures':
          '1':
            'name': 'punctuation.definition.character-class.regexp'
        'name': 'constant.other.character-class.set.regexp'
        'patterns':
          {
            'include': '#character-class'
          }
          {
            'captures':
              '2':
                'name': 'constant.character.escape.backslash.regexp'
              '4':
                'name': 'constant.character.escape.backslash.regexp'
            'match': '((\\\\.)|.)\\-((\\\\.)|[^\\]])'
            'name': 'constant.other.character-class.range.regexp'
          }
        ]
      }
    ]
